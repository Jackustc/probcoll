# contains all needed parameters for all files

dt: 0.25
random_seed: 0

exp_dir: '/home/adam/probcoll/experiments/rccar'
exp_name: test

##########################
### Probcoll algorithm ###
##########################

probcoll:
  T: 28 # timesteps per trajectory
  max_iter: 21
  planner_type: 'primitives' # primitives / cem / teleop / straight / lattice

  control_noise:
    type: 'uniform' # zero / gaussian / uniform

    zero: {}
    gaussian:
      std: [3.0, 0.3]
    uniform:
      lower: [-10., 0.]
      upper: [10., 0.]

  label_with_noise: True # if false, saves desired controls (i.e. without control_noise)
  obs_noise: True

#  init_data: '/home/adam/gps_quadrotor/experiments/rccar/init_data_real'
#  init_epochs: 100
  use_ground_truth: False
  use_init_cost: True # TODO
  epsilon_greedy: 0

  cost:
    weight: 1e3 # TODO
    eval_cost: 'speed * speed * sigmoid(probs_mean + 0.0*probs_std)'
    pre_activation: True

  conditions:
    repeats: 20 # TODO
    num_test: 1
    randomize_conds: False
    randomize_reps: True

    default:
      cmd_steer: [49.5]
      cmd_vel: [0.]

    range:
      cmd_vel:
        min: [0]
        max: [0]
        num: [1]

    perturb: # repetition perturbations
      cmd_vel: [0.]
    
######################
### Probcoll model ###
######################
    
model:
  T: 6 # how many timesteps to predict

  control_range:
    lower: [0., 0.]
    upper: [99.0, 99.0]

  
  graph_type: 'fc' # fc / cnn / rnn
  num_bootstrap: 1 # 5
  dropout: 0.95 # pct keep (None if no dropout)
  reg: 0.

  # what to use as input to prediction model
  X_order: []
  U_order: ['cmd_steer', 'cmd_vel']
  O_order: ['camera']
  output_order: ['collision'] # taken from observations O

  # NN training parameters
  device: 0
  gpu_fraction: 0.8
  reset_every_train: True # every time train is called, reinitialize weights?
  early_stopping: False # if True, only saves model each epoch if it's the lowest cost on validation for all epochs
  learning_rate: 0.001
  batch_size: 32
  display_batch: 100
  val_freq: 250 # How often you compute validation
  val_steps: 200  # How many steps you do on validation 
  steps: 5000
  val_pct: 0.2

  # preprocessing
  use_O_orth: False

  # how to resample data
  aggregate_save_data: True # put all data into one file?
  save_type: 'fixedlen' # fixedlen
  balance:
    type: collision # none, collision, uncertainty

    collision:
      pct_coll: 0.5
    
#################################################
### Planning objective and optimizer settings ###
#################################################

planning:
  cost_velocity:
    u_des: [49.5, 16.] # TODO: hard-coded order: steering then speed
    u_weights: [1., 0.2] # [0.0001, 0.2]

  # TODO: other planning methods here

#############
### World ###
#############

world:
  plot: False
  randomize: True

  back_up:
    cmd_steer: [40, 60]
    cmd_vel: -12
    duration: 4.

######################################################
########### States, controls, observations ###########
######################################################

X:
  dim: 2
  order: ['cmd_steer', 'cmd_vel']

  cmd_steer: {idx: 0, dim: 1, min: 0, max: 100}
  cmd_vel: {idx: 1, dim: 1, min: 6}

U:
  dim: 2
  order: ['cmd_steer', 'cmd_vel']

  cmd_steer: {idx: 0, dim: 1, min: 0, max: 100}
  cmd_vel: {idx: 1, dim: 1, min: 6}

O:
  dim: 577
  order: ['camera', 'collision']

  camera:
    idx: 0
    dim: 576
    height: 32
    width: 18
    noise: 0.01
  collision: {idx: 576, dim: 1, buffer: 0.0}

##################
### ros topics ###
##################

rccar:
  sim: True 
  srv: 'bair_car/sim_env'

  topics:
    camera: '/bair_car/image' # sensor_msgs/Image
    depth: '/bair_car/depth'
    cmd_steer: '/bair_car/cmd/steer' # std_msgs/Float32
    cmd_vel: '/bair_car/cmd/vel' # std_msgs/Float32
    pred_image: '/bair_car/prediction/image'
    collision: '/bair_car/crash' # std_msgs/Empty
    good_rollout: '/bair_car/good_rollout' # std_msgs/Empty
    bad_rollout: '/bair_car/bad_rollout' # std_msgs/Empty
    teleop_cmd_steer: '/bair_car/teleop_cmd/steer' # std_msgs/Float32
    teleop_cmd_vel: '/bair_car/teleop_cmd/motor' # std_msgs/Float32
    reset: '/bair_car/reset' #std_msgs/Empty

    # below topics that are just recorded
    cmd_motor: '/bair_car/cmd/motor'
    encoder: '/bair_car/encoder'
    motor: '/bair_car/motor'
    state: '/bair_car/state'
    steer: '/bair_car/steer'
    vel: '/bair_car/vel'
    camera_info: '/bair_car/down/camera_info'
    # and for debugging
    debug_cost: '/bair_car/debug_cost' # visualization_msgs/MarkerArray
    debug_cost_probcoll: '/bair_car/debug_cost_probcoll' # visualization_msgs/MarkerArray

